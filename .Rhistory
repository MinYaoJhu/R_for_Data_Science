#|   the bars are scaled to the same height, making it a relative frequencies
#|   plot
ggplot(penguins, aes(x = island, fill = species)) +
geom_bar(position = "fill")
#| warning: false
#| fig-alt: >
#|   A scatterplot of body mass vs. flipper length of penguins. The plot
#|   displays a positive, linear, relatively strong relationship between
#|   these two variables.
ggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point()
#| warning: false
#| fig-alt: >
#|   A scatterplot of body mass vs. flipper length of penguins. The plot
#|   displays a positive, linear, relatively strong relationship between
#|   these two variables. The points are colored based on the species of the
#|   penguins and the shapes of the points represent islands (round points are
#|   Biscoe island, triangles are Dream island, and squared are Torgersen
#|   island). The plot is very busy and it's difficult to distinguish the shapes
#|   of the points.
ggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = island))
#| warning: false
#| fig-width: 8
#| fig-asp: 0.33
#| fig-alt: >
#|   A scatterplot of body mass vs. flipper length of penguins. The shapes and
#|   colors of points represent species. Penguins from each island are on a
#|   separate facet. Within each facet, the relationship between body mass and
#|   flipper length is positive, linear, relatively strong.
ggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
facet_wrap(~island)
mpg
str(mpg)
summary(mpg)
ggplot(mpg, aes(x = hwy, y = displ)) +
geom_point(aes(color = cyl))
ggplot(mpg, aes(x = hwy, y = displ)) +
geom_point(aes(size = cyl))
ggplot(mpg, aes(x = hwy, y = displ)) +
geom_point(aes(color = year, size = cyl))
new_mpg <- mpg
new_mpg$cyl_f <- as.factor(mpg$cyl)
str(new_mpg)
ggplot(new_mpg, aes(x = hwy, y = displ)) +
geom_point(aes(color = year, shape = cyl_f))
ggplot(mpg, aes(x = hwy, y = displ)) +
geom_point(aes(linewidth = drv))
ggplot(mpg, aes(x = hwy, y = displ)) +
geom_point() +
geom_smooth(aes(linewidth = drv))
ggplot(mpg, aes(x = hwy, y = displ)) +
geom_point(aes(color = cyl, size = cyl))
ggplot(
data = penguins,
mapping = aes(x = bill_depth_mm, y = bill_length_mm)
) +
geom_point(aes(color = species), na.rm = TRUE) +
geom_smooth(method = "lm", na.rm = TRUE) +
labs(
title = "Bill depth and bill length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
caption = "Data come from the palmerpenguins package.",
x = "bill depth (mm)", y = "bill length (mm)",
color = "Species"
) +
scale_color_colorblind()
ggplot(
data = penguins,
mapping = aes(x = bill_depth_mm, y = bill_length_mm)
) +
geom_point(aes(color = species), na.rm = TRUE) +
geom_smooth(method = "lm", na.rm = TRUE) +
labs(
title = "Bill depth and bill length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
caption = "Data come from the palmerpenguins package.",
x = "bill depth (mm)", y = "bill length (mm)",
color = "Species"
) +
scale_color_colorblind() +
facet_wrap(~species)
#| warning: false
#| fig-show: hide
ggplot(
data = penguins,
mapping = aes(
x = bill_length_mm, y = bill_depth_mm,
color = species, shape = species
)
) +
geom_point() +
labs(color = "Species")
ggplot(
data = penguins,
mapping = aes(
x = bill_length_mm, y = bill_depth_mm,
color = species, shape = species
)
) +
geom_point()
#| label: setup
library(nycflights13)
library(tidyverse)
flights
glimpse(flights)
#| eval: false
flights |>
filter(dest == "IAH") |>
group_by(year, month, day) |>
summarize(
arr_delay = mean(arr_delay, na.rm = TRUE)
)
devtools::install_github("rstudio/addinexamples", type = "source")
#| label: setup
library(nycflights13)
library(tidyverse)
flights
flight
flights
flights |>
filter(arr_delay >= 120)
flights |>
filter(arr_delay >= 120) |>
filter(dest %in% c("IAH","HOU"))
airlines
flights |>
filter(arr_delay >= 120) |>
filter(dest %in% c("IAH","HOU")) |>
filter(carrier %in% c("UA","AA","DL"))
flights |>
filter(arr_delay >= 120) |>
filter(dest %in% c("IAH","HOU")) |>
filter(carrier %in% c("UA","AA","DL")) |>
filter(month %in% c(7,8,9))
flights |>
filter(arr_delay >= 120) |>
filter(dest %in% c("IAH","HOU")) |>
filter(carrier %in% c("UA","AA","DL")) |>
filter(month %in% c(7,8,9)) |>
filter(dep_delay == 0)
flights |>
filter(arr_delay >= 120) |>
filter(dest %in% c("IAH","HOU")) |>
filter(carrier %in% c("UA","AA","DL")) |>
filter(month %in% c(7,8,9))
flights |>
filter(arr_delay >= 120)
flights |>
filter(arr_delay >= 120) |>
filter(dest %in% c("IAH","HOU"))
flights |>
filter(arr_delay >= 120) |>
filter(dest %in% c("IAH","HOU")) |>
filter(carrier %in% c("UA","AA","DL"))
flights |>
filter(arr_delay >= 120) |>
filter(dest %in% c("IAH","HOU")) |>
filter(carrier %in% c("UA","AA","DL")) |>
filter(month %in% c(7,8,9))
flights |>
filter(arr_delay >= 120) |>
filter(dest %in% c("IAH","HOU")) |>
filter(carrier %in% c("UA","AA","DL")) |>
filter(month %in% c(7,8,9)) |>
filter(dep_delay <= 120)
flights |>
filter(arr_delay >= 120) |>
filter(dest %in% c("IAH","HOU")) |>
filter(carrier %in% c("UA","AA","DL")) |>
filter(month %in% c(7,8,9)) |>
filter(dep_delay <= 120) |>
filter(dep_delay >= 60) |>
filter(dep_delay-arr_delay >= 30)
flights |>
filter(arr_delay >= 120) |>
filter(dest %in% c("IAH","HOU")) |>
filter(carrier %in% c("UA","AA","DL")) |>
filter(month %in% c(7,8,9)) |>
filter(dep_delay == 0)
flights |>
filter(arr_delay >= 120) |>
filter(dest %in% c("IAH","HOU")) |>
filter(carrier %in% c("UA","AA","DL")) |>
filter(month %in% c(7,8,9)) |>
filter(dep_delay <= 120) |>
filter(dep_delay >= 60) |>
filter(dep_delay-arr_delay >= 30)
flights |>
filter(arr_delay >= 120) |>
filter(dest %in% c("IAH","HOU")) |>
filter(carrier %in% c("UA","AA","DL")) |>
filter(month %in% c(7,8,9)) |>
filter(dep_delay <= 120) |>
filter(dep_delay >= 60) |>
filter(dep_delay-arr_delay >= 30)
flights |>
filter(arr_delay >= 60) |>
filter(dest %in% c("IAH","HOU")) |>
filter(carrier %in% c("UA","AA","DL")) |>
filter(month %in% c(7,8,9)) |>
filter(dep_delay <= 120) |>
filter(dep_delay >= 60) |>
filter(dep_delay-arr_delay >= 30)
flights |>
arrange(desc(dep_delay))
flights |>
arrange(desc(dep_delay))
flights |>
arrange(dep_time)
flights |>
arrange(sched_dep_time)
flights |>
filter(arr_delay >= 120) |>
filter(dest %in% c("IAH","HOU")) |>
filter(carrier %in% c("UA","AA","DL")) |>
filter(month %in% c(7,8,9)) |>
filter(dep_delay == NA)
flights |>
filter(arr_delay >= 120) |>
filter(dest %in% c("IAH","HOU")) |>
filter(carrier %in% c("UA","AA","DL")) |>
filter(month %in% c(7,8,9)) |>
filter(dep_delay == 0)
flights |>
filter(arr_delay >= 120) |>
filter(dest %in% c("IAH","HOU")) |>
filter(carrier %in% c("UA","AA","DL")) |>
filter(month %in% c(7,8,9)) |>
filter(dep_delay <= 0)
summary(flights)
summary(flights)
# earliest dep_time
flights |>
arrange(dep_time)
# earliest sched_dep_time
flights |>
arrange(sched_dep_time)
flights |>
mutate(speed = distance / air_time)
flights |>
mutate(speed = distance / air_time) |>
arrange(desc(speed))
flights |>
filter(arr_delay >= 120) |>
filter(dest %in% c("IAH","HOU")) |>
filter(carrier %in% c("UA","AA","DL")) |>
filter(month %in% c(7,8,9)) |>
filter(dep_delay <= 120) |>
filter(dep_delay >= 60) |>
mutate(gain = dep_delay - arr_delay) |>
filter(gain >= 30)
flights |>
filter(arr_delay >= 60) |>
filter(dest %in% c("IAH","HOU")) |>
filter(carrier %in% c("UA","AA","DL")) |>
filter(month %in% c(7,8,9)) |>
filter(dep_delay <= 120) |>
filter(dep_delay >= 60) |>
mutate(gain = dep_delay - arr_delay) |>
filter(gain >= 30)
flights |>
count(month,day)
flights |>
distinct(month,day)
flights |>
arrange(distance)
flights |>
arrange(desc(distance))
airports
#| label: setup
library(nycflights13)
library(tidyverse)
flights |>
select(tailnum) |>
arrange(arr_delay)
flights |>
arrange(arr_delay) |>
select(tailnum)
flights |>
group_by(month) |>
summarize(
delay = mean(dep_delay, na.rm = TRUE),
n = n()
)
flights |>
group_by(dest) |>
slice_max(arr_delay, n = 1) |>
relocate(dest)
daily <- flights |>
group_by(year, month, day)
daily
daily_flights <- daily |>
summarize(n = n())
#| results: false
daily_flights <- daily |>
summarize(
n = n(),
.groups = "drop_last"
)
daily_flights <- daily |>
summarize(n = n())
daily_flights
#| results: false
daily_flights <- daily |>
summarize(
n = n(),
.groups = "drop_last"
)
daily_flights
daily |>
ungroup()
daily |>
ungroup() |>
summarize(
avg_delay = mean(dep_delay, na.rm = TRUE),
flights = n()
)
#| results: false
flights |>
summarize(
delay = mean(dep_delay, na.rm = TRUE),
n = n(),
.by = month
)
#| results: false
flights |>
summarize(
delay = mean(dep_delay, na.rm = TRUE),
n = n(),
.by = c(origin, dest)
)
flights |>
group_by(carrier, dest) |>
summarize(n())
flights |>
group_by(carrier, dest) |>
summarize(
delay = mean(dep_delay, na.rm = TRUE),
n = n())
flights |>
group_by(carrier) |>
summarize(
delay = mean(dep_delay, na.rm = TRUE),
n = n())
flights |>
group_by(carrier) |>
summarize(
delay = mean(dep_delay, na.rm = TRUE),
n = n()) |>
arrange(desc(delay))
airlines
airlines |>
filter(carrier == "F9")
flights |>
group_by(carrier, dest) |>
summarize(
delay = mean(dep_delay, na.rm = TRUE),
n = n()) |>
arrange(desc(delay))
flights |>
group_by(dest) |>
summarize(
delay = mean(dep_delay, na.rm = TRUE),
n = n()) |>
arrange(desc(delay))
flights |>
group_by(carrier, dest) |>
summarize(
delay = mean(dep_delay, na.rm = TRUE),
n = n()) |>
arrange(desc(delay))
flights |>
group_by(dest) |>
summarize(
delay = mean(dep_delay, na.rm = TRUE),
n = n()) |>
arrange(desc(delay))
flights |>
group_by(dest) |>
slice_max(arr_delay, n = 1) |>
arrange(desc(delay))
flights |>
group_by(dest) |>
slice_max(arr_delay, n = 1) |>
arrange(desc(arr_delay))
flights |>
group_by(dest) |>
slice_max(arr_delay, n = 1) |>
relocate(dest) |>
arrange(desc(arr_delay))
flights |>
group_by(dest) |>
slice_max(arr_delay, n = 1) |>
relocate(dest, dep_delay) |>
arrange(desc(arr_delay))
flights |>
group_by(hour) |>
summarize(
delay = mean(dep_delay, na.rm = TRUE),
n = n())
flights |>
group_by(hour) |>
ggplot(aes(x = hour, y = dep_delay)) +
geom_point()
flights |>
group_by(hour) |>
ggplot(aes(x = hour, y = dep_delay, na.rm = TRUE)) +
geom_boxplot() +
geom_point()
flights |>
group_by(hour) |>
ggplot(aes(x = hour, y = dep_delay),na.rm = TRUE) +
geom_boxplot() +
geom_point()
flights |>
group_by(hour)
flights_hour <- flights |>
group_by(hour)
str(flights_hour)
flights_hour <- flights |>
group_by(hour) |>
select(hour, arr_delay)
str(flights_hour)
flights_hour <- flights |>
group_by(hour) |>
select(hour, dep_delay)
str(flights_hour)
flights_hour <- flights |>
group_by(hour) |>
select(hour, dep_delay)
flights_hour$hour <- as.factor(flights_hour$hour)
str(flights_hour)
flights_hour |>
ggplot(aes(x = hour, y = dep_delay)) +
geom_boxplot(na.rm = TRUE) +
geom_point(na.rm = TRUE)
flights_hour <- flights |>
group_by(dep_time) |>
select(dep_time, dep_delay)
flights_dep_time <- flights |>
group_by(dep_time) |>
select(dep_time, dep_delay)
flights_dep_time |>
ggplot(aes(x = dep_time, y = dep_delay)) +
geom_smooth(na.rm = TRUE) +
geom_point(na.rm = TRUE)
flights_dep_time <- flights |>
select(dep_time, dep_delay)
flights_dep_time |>
ggplot(aes(x = dep_time, y = dep_delay)) +
geom_smooth(na.rm = TRUE) +
geom_point(na.rm = TRUE)
flights_sched_dep_time <- flights |>
select(sched_dep_time, dep_delay)
flights_sched_dep_time |>
ggplot(aes(x = sched_dep_time, y = dep_delay)) +
geom_smooth(na.rm = TRUE) +
geom_point(na.rm = TRUE)
flights |>
slice_min(dep_delay, n = 1)
flights |>
slice_min(dep_delay, n = -1)
flights
flights |>
slice_min(dep_delay, n = -2)
flights |>
slice_min(dep_delay, n = -1)
flights
flights |>
arrange(desc(dep_delay))
flights |>
arrange(dep_delay)
flights |>
count(dest)
flights |>
count(dest, sort = TRUE)
df <- tibble(
x = 1:5,
y = c("a", "b", "a", "a", "b"),
z = c("K", "K", "L", "L", "K")
)
df
df |>
group_by(y)
df |>
arrange(y)
df |>
group_by(y) |>
summarize(mean_x = mean(x))
df |>
group_by(y, z) |>
summarize(mean_x = mean(x))
df |>
group_by(y, z) |>
summarize(mean_x = mean(x), .groups = "drop")
df |>
group_by(y, z) |>
summarize(mean_x = mean(x))
df |>
group_by(y, z) |>
summarize(mean_x = mean(x))
df |>
group_by(y, z) |>
mutate(mean_x = mean(x))
df |>
group_by(y, z) |>
summarize(mean_x = mean(x))
df |>
group_by(y, z) |>
mutate(mean_x = mean(x))
